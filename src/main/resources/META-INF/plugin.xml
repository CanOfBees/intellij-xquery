<!--
  ~ Copyright 2013-2015 Grzegorz Ligas <ligasgr@gmail.com> and other contributors
  ~ (see the CONTRIBUTORS file).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<idea-plugin url="http://ligasgr.github.io/intellij-xquery/" version="2">
    <id>org.intellij.xquery</id>
    <name>XQuery Support</name>
    <version>3.0</version>
    <vendor email="ligasgr@gmail.com" url="http://grzegorzligas.blogspot.com/">Grzegorz Ligas</vendor>

    <description>Provides support for XQuery language in version 3.0</description>

    <change-notes>
        <![CDATA[
            <p>3.0.0:</p>
            <ul>
                <li>Upgrade to Saxon 9.6.0.7.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/123">#123</a> - Add support for MarkLogic JSON node constructors/tests (by <a href="https://github.com/malteseduck">Chris Cieslinski</a>).</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/19">#19</a> - Improved XML support.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/141">#141</a> - IDEA 15 support.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/129">#129</a> - Highlight unresolved function.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/120">#120</a> - BaseX 8.0: New XQJ Driver.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/127">#127</a> - Upgrade Zorba api to 3.0.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/89">#89</a> - Sedna built-in function completion.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/87">#87</a> - eXist built-in function completion.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/88">#88</a> - Zorba built-in function completion.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/85">#85</a> - MarkLogic built-in function completion.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/86">#86</a> - BaseX built-in function completion.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/84">#84</a> - Saxon built-in function completion.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/126">#126</a> - Highlight unresolved namespace name in direct xml element constructors.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/33">#33</a> - Smart keyword completion (at least smarter than now).</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/130">#130</a> - Allow for hyphens in names.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/125">#125</a> - FindUsages does not show proper options dialog for other languages after installing XQuery Support plugin</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/143">#143</a> - Find prefixes everywhere.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/145">#145</a> - Refreshed list of available namespaces based on MarkLogic official list.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/144">#144</a> - Use namespaces when completing the full tag.</li>
                <li>Issues <a href="https://github.com/ligasgr/intellij-xquery/issues/136">#136</a> and <a href="https://github.com/ligasgr/intellij-xquery/issues/140">#140</a> - Fixed scope traversing for bindings.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/142">#142</a> - Bif file loading has to use resource as stream as Java is not able to make a path from given URL.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/135">#135</a> - Support flagging declare namespace statements as not being used when there are no references to them. Also added xml reference checking for imports and a quick-fix. Unified finding.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/132">#132</a> - Double click in an XML attribute only selects one character.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/131">#131</a> - Don't treat import used by annotation as unused.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/133">#133</a> - Incorrect error using ancestor::node in XPath.</li>
                <li>Issue <a href="https://github.com/ligasgr/intellij-xquery/issues/117">#117</a> - Add additional states to stop highlighter from re-lexing in the middle of the string. Highlighter runs tokenization from the last segment that started in YYINITIAL state.</li>
            </ul>
        ]]>
    </change-notes>

    <idea-version since-build="139.1117" until-build="143.9999"/>

    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="java-lang.xml">com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
        <fileTypeFactory implementation="org.intellij.xquery.XQueryFileTypeFactory"/>
        <lang.parserDefinition language="XQuery" implementationClass="org.intellij.xquery.parser.XQueryParserDefinition"/>
        <lang.syntaxHighlighterFactory key="XQuery" implementationClass="org.intellij.xquery.highlighting.XQuerySyntaxHighlighterFactory"/>
        <lang.findUsagesProvider language="XQuery" implementationClass="org.intellij.xquery.usage.XQueryFindUsageProvider"/>
        <lang.commenter language="XQuery" implementationClass="org.intellij.xquery.comment.XQueryCommenter"/>
        <lang.braceMatcher language="XQuery" implementationClass="org.intellij.xquery.braces.XQueryBraceMatcher"/>
        <lang.namesValidator language="XQuery" implementationClass="org.intellij.xquery.refactoring.XQueryNamesValidator"/>
        <codeInsight.wordCompletionFilter language="XQuery" implementationClass="org.intellij.xquery.completion.XQueryWordCompletionFilter"/>
        <usageTypeProvider implementation="org.intellij.xquery.usage.XQueryUsageTypeProvider"/>
        <findUsagesHandlerFactory implementation="org.intellij.xquery.usage.XQueryFindUsagesHandlerFactory"/>
        <lang.refactoringSupport language="XQuery" implementationClass="org.intellij.xquery.refactoring.XQueryRefactoringSupportProvider"/>
        <renameHandler implementation="org.intellij.xquery.refactoring.XQueryVariableInplaceRenameHandler"/>
        <completion.contributor language="XQuery" implementationClass="org.intellij.xquery.completion.XQueryCompletionContributor"/>
        <lang.psiStructureViewFactory language="XQuery" implementationClass="org.intellij.xquery.structure.XQueryStructureViewFactory"/>
        <lang.formatter language="XQuery" implementationClass="org.intellij.xquery.formatter.XQueryFormattingModelBuilder"/>
        <lang.importOptimizer language="XQuery" implementationClass="org.intellij.xquery.formatter.XQueryImportOptimizer"/>
        <lang.foldingBuilder language="XQuery" implementationClass="org.intellij.xquery.folding.XQueryFoldingBuilder"/>
        <codeStyleSettingsProvider implementation="org.intellij.xquery.formatter.settings.XQueryCodeStyleSettingsProvider"/>

        <defaultLiveTemplatesProvider implementation="org.intellij.xquery.livetemplate.XQueryLiveTemplatesProvider"/>
        <liveTemplateContext implementation="org.intellij.xquery.livetemplate.XQueryContextType$Generic"/>
        <liveTemplateContext implementation="org.intellij.xquery.livetemplate.XQueryContextType$Prolog"/>
        <liveTemplateContext implementation="org.intellij.xquery.livetemplate.XQueryContextType$Expression"/>

        <langCodeStyleSettingsProvider implementation="org.intellij.xquery.formatter.settings.XQueryLanguageCodeStyleSettingsProvider"/>
        <quoteHandler fileType="XQuery file" className="org.intellij.xquery.quotes.XQueryQuoteHandler"/>
        <typedHandler implementation="org.intellij.xquery.completion.xml.XQueryXmlSlashTypedHandler" id="xqueryXmlSlash"/>
        <typedHandler implementation="org.intellij.xquery.completion.xml.XQueryXmlGtTypedHandler" id="xqueryXmlGt"/>
        <declarationRangeHandler key="org.intellij.xquery.psi.XQueryFunctionDecl" implementationClass="org.intellij.xquery.structure.XQueryFunctionDeclarationRangeHandler"/>
        <annotator language="XQuery" implementationClass="org.intellij.xquery.annotator.XQueryAnnotator"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/Default.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/Darcula.xml"/>
        <colorSettingsPage implementation="org.intellij.xquery.highlighting.XQueryColorSettingsPage"/>

        <localInspection enabledByDefault="true" shortName="UnusedImports" groupName="XQuery"
                         displayName="Unused import"
                         implementationClass="org.intellij.xquery.inspection.imports.UnusedImportsInspection"/>
        <localInspection enabledByDefault="true" shortName="UnusedNamespaceDeclaration" groupName="XQuery"
                         displayName="Unused namespace declaration"
                         implementationClass="org.intellij.xquery.inspection.namespace.UnusedNamespaceDeclarationInspection"/>
        <localInspection enabledByDefault="true" shortName="UnusedVariable" groupName="XQuery"
                         displayName="Unused variable"
                         implementationClass="org.intellij.xquery.inspection.variable.UnusedVariableInspection"/>
        <localInspection enabledByDefault="true" shortName="DefaultFunctionNamespaceSameAsModuleNamespace" groupName="XQuery"
                         displayName="Default function namespace is same as module namespace"
                         implementationClass="org.intellij.xquery.inspection.namespace.DefaultFunctionNamespaceSameAsModuleNamespace"/>
        <localInspection enabledByDefault="false" shortName="NamespacePrefixFromFileName" groupName="XQuery"
                         displayName="Namespace prefix derived from file name"
                         implementationClass="org.intellij.xquery.inspection.namespace.NamespacePrefixFromFileName"/>
        <localInspection enabledByDefault="true" shortName="InvalidVersion" groupName="XQuery"
                         displayName="Invalid version"
                         implementationClass="org.intellij.xquery.inspection.version.InvalidVersionInspection"/>
        <localInspection enabledByDefault="true" shortName="MarklogicExtendedSyntax" groupName="XQuery"
                         displayName="MarkLogic extended syntax"
                         implementationClass="org.intellij.xquery.inspection.marklogic.MarklogicExtendedSyntaxInspection"/>

        <codeInsight.parameterInfo language="XQuery" implementationClass="org.intellij.xquery.completion.function.parameters.XQueryParameterInfoHandler" />
        <lang.documentationProvider language="XQuery" implementationClass="org.intellij.xquery.documentation.XQueryDocumentationProvider"/>
        <projectConfigurable instance="org.intellij.xquery.settings.XQueryConfigurable"/>
        <projectService serviceImplementation="org.intellij.xquery.settings.XQuerySettings"/>
        <createFromTemplateHandler order="first" implementation="org.intellij.xquery.actions.XQueryCreateFromTemplateHandler"/>
    </extensions>

    <actions>
        <action id="XQuery.NewXQueryFile" class="org.intellij.xquery.actions.CreateXQueryFileAction"
                text="XQuery File" description="Create new XQuery file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
    </actions>
</idea-plugin>